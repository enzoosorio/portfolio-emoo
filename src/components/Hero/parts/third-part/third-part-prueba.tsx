import { projects_realized } from "../../../../lib/projects-realized";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/all";
import { useGSAP } from "@gsap/react";
import { useRef, useState } from "react";
import { DescripcionPart } from "./descripcion-part";
import { ImagesPart } from "./images-part";
import { Translation } from "react-i18next";
gsap.registerPlugin(ScrollTrigger, useGSAP);

export const ThirdPart = () => {
  const [projectIsFixed, setProjectIsFixed] = useState<number>(1);
  const divImagesParents = useRef<(HTMLDivElement | null)[]>([]);
  const divImagesInner = useRef<(HTMLDivElement | null)[]>([]);
  const divImagesChildren = useRef<(HTMLDivElement | null)[]>([]);

  const handleClick = (index: number) => {
    if (projectIsFixed === index) {
      setProjectIsFixed(-1);
      return;
    }
    setProjectIsFixed(index);
  };

  useGSAP(() => {
    ScrollTrigger.create({
      trigger: ".third-section",
      pin: ".third-pinned-container",
      start: "top top",
      end: "bottom bottom",
      scrub: 1,
    });

    let tl = gsap.timeline({
      scrollTrigger: {
        trigger: ".third-section",
        start: "top top",
        end: "center 30%",
        scrub: 1,
      },
    });

    tl.from(".title-third-part", {
      x: 200,
      opacity: 0,
      ease: "power1.out",
    });

    tl.to(
      ".text-project",
      {
        translateX: 0,
        opacity: 1,
        stagger: 0.3,
      },
      0.3
    );
    tl.to(
      ".description-part",
      {
        translateX: 0,
        opacity: 1,
        stagger: 0.1,
      },
      0.5
    );
    tl.to(
      ".images-part",
      {
        translateX: 0,
        opacity: 1,
        stagger: 0.1,
      },
      1
    );

    divImagesParents.current.forEach((parentEl, index) => {
      const innerEl = divImagesInner.current[index];
      const childEl = divImagesChildren.current[index];
      if (!parentEl || !innerEl || !childEl) return;

      const totalContentW = childEl.scrollWidth;
      const viewportW = innerEl.offsetWidth;
      const scrollLength = totalContentW - viewportW;

      gsap.to(childEl, {
        x: -scrollLength,
        ease: "none",
        scrollTrigger: {
          scroller: parentEl,
          trigger: innerEl,
          start: "top top",
          end: () => "+=" + scrollLength,
          scrub: true,
          pin: innerEl,

          invalidateOnRefresh: true,
        },
      });
    });
  }, []);

  return (
    <section 
    id="projects"
    className="custom-cursor third-section mt-10 relative  main-card-container h-[300vh] overflow-hidden flex items-start justify-center">
      <div className="relative third-pinned-container h-screen w-full px-8 py-8 flex flex-col lg:flex-row-reverse items-center justify-end gap-4 2xl:gap-8">
        <div
        className="relative w-full lg:w-[700px] 2xl:w-[940px] h-auto py-2 lg:py-0 lg:h-full pt-40 px-4  flex flex-col items-start justify-center gap-4 2xl:gap-8">
          <Translation ns={["heroThirdPart"]}>
            {
              (t) => (
                <>
                <p className="title-third-part hidden sm:block text-xs sm:text-base lg:text-lg 2xl:text-2xl font-ibm-plex-mono ">
            {t("Title")}
          </p>
          <p className="title-third-part block sm:hidden text-xs sm:text-base lg:text-lg 2xl:text-2xl font-ibm-plex-mono ">
            {t("Title2")}
          </p>
                </>
              )
            }

          </Translation>
          <Translation ns={["projects_realized"]}>
            {
              (t) => (
               <div className="relative flex flex-row lg:flex-col items-center gap-4 w-full">
                 <ul className="w-[75%] lg:w-full grid grid-cols-3 lg:flex gap-2  lg:flex-nowrap lg:flex-col items-start justify-start shadow-xl p-3">
            {projects_realized.map((project) => (
                (
              <li
                key={project.project_id}
                className="text-project opacity-0 my-2 translate-x-[1000px]"
              >
                <h3
                  onClick={() => handleClick(project.project_id)}
                  className={`text-sm lg:text-2xl text-stagger font-space-grotesk uppercase text-primary-blue hover:text-primary-purple ${
                    projectIsFixed === project.project_id
                      ? "text-purple-500 font-bold"
                      : "text-primary-blue"
                  } transition-all duration-300 `}
                >
                 {t(`projects.${project.i18n_key}.name` as any)}
                </h3>
              </li>
            )
              )
            )}
                  </ul>
              {projects_realized.length > 0 && projects_realized.map((project) => (
                <div 
                key={project.project_id}
                className={`absolute top-[50%] lg:top-auto lg:-bottom-32 -translate-x-1/2 -translate-y-1/2 w-[80px] sm:w-[120px] lg:w-auto   ${projectIsFixed === project.project_id ? "lg:left-1/2 left-[88%]" : "left-[240%]"} transition-all flex flex-row flex-wrap lg:flex-nowrap items-center justify-center gap-6`}>
                  {project.project_github && (
                    <a
                      href={project.project_github}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="rounded-full"
                    >
                      <svg viewBox="0 0 32 33" fill="none" className="w-6 h-6 sm:w-8 sm:h-8 lg:w-12 lg:h-12 ">
                        <g clipPath="url(#clip0_10_1264)">
                        <path d="M10.417 27.3809L10.416 27.3818L10.3623 27.3789C10.3506 27.3692 10.336 27.355 10.3213 27.3359C10.3531 27.3353 10.3846 27.3334 10.416 27.332M10.417 27.3809L10.416 27.332M10.417 27.3809C10.4357 27.3806 10.4538 27.3792 10.4717 27.377C10.4845 27.3655 10.4997 27.349 10.5146 27.3271C10.4819 27.3293 10.4491 27.3306 10.416 27.332M10.417 27.3809L10.416 27.332M7.91016 26.4971C7.9453 26.5271 7.98005 26.5568 8.01562 26.585C7.95493 26.619 7.89851 26.6233 7.86621 26.6221C7.85234 26.6117 7.83831 26.6011 7.8252 26.5889M7.91016 26.4971L7.8252 26.5889M7.91016 26.4971C7.90927 26.4963 7.90811 26.4959 7.90723 26.4951L7.8623 26.542L7.90723 26.4941C7.87368 26.4654 7.83879 26.4377 7.80566 26.4072C7.78321 26.4652 7.78225 26.5167 7.78613 26.5479C7.79737 26.5605 7.80829 26.5741 7.82129 26.5859C7.82246 26.5871 7.82402 26.5878 7.8252 26.5889M7.91016 26.4971L7.8252 26.5889M6.96191 25.4805L6.96289 25.4814L7.02344 25.4395L7.02246 25.4375M6.96191 25.4805L7.02246 25.4375M6.96191 25.4805L7.02246 25.4375M6.96191 25.4805C6.93864 25.447 6.92133 25.4118 6.90918 25.377C6.91604 25.3549 6.92638 25.3311 6.94141 25.3066C6.94254 25.3084 6.94424 25.3098 6.94531 25.3115C6.95584 25.3283 6.96344 25.3413 6.96777 25.3486C6.96977 25.352 6.97103 25.3543 6.97168 25.3555V25.3545L6.97754 25.3652C6.99203 25.3898 7.00778 25.4135 7.02246 25.4375M16 2C24.5655 2 31.5 8.86387 31.5 17.3193C31.5 24.0697 27.0831 29.8025 20.9414 31.8408C20.6705 31.8863 20.5754 31.817 20.5488 31.793C20.5065 31.7546 20.4689 31.6771 20.4688 31.5693C20.4688 31.3109 20.4729 30.758 20.4775 30C20.4822 29.2439 20.4873 28.2872 20.4873 27.2275C20.4873 26.1573 20.2352 25.3029 19.8555 24.6738C21.3923 24.4276 22.9582 23.9471 24.209 22.9121C25.731 21.6526 26.707 19.6423 26.707 16.4932C26.707 14.7508 26.1163 13.2964 25.1299 12.1357C25.3599 11.417 25.6606 9.85763 24.8682 7.875L24.7803 7.65527L24.5547 7.58398L24.4092 8.0459C24.5416 7.62781 24.553 7.58787 24.5537 7.58398L24.5527 7.58301H24.5508C24.5495 7.58261 24.5483 7.58149 24.5469 7.58105C24.5438 7.58012 24.5399 7.57919 24.5361 7.57812C24.5283 7.57592 24.5184 7.5739 24.5078 7.57129C24.4868 7.5661 24.4606 7.55942 24.4287 7.55371C24.3644 7.54221 24.2776 7.5313 24.1689 7.52637C23.9514 7.51652 23.6461 7.53145 23.249 7.61426C22.4874 7.77311 21.3923 8.18354 19.9209 9.14355C18.827 8.86216 17.6772 8.70111 16.5273 8.66016L16.002 8.64941H15.998C14.6748 8.6553 13.3405 8.81932 12.082 9.14355C10.6088 8.18349 9.51241 7.77304 8.75 7.61426C8.35225 7.53143 8.04682 7.5165 7.8291 7.52637C7.72067 7.53129 7.63458 7.54225 7.57031 7.55371C7.53829 7.55943 7.5113 7.56512 7.49023 7.57031C7.4798 7.57289 7.47064 7.57595 7.46289 7.57812C7.45908 7.5792 7.4553 7.58011 7.45215 7.58105C7.45056 7.58153 7.44868 7.58159 7.44727 7.58203L7.44531 7.58301H7.44434C7.44385 7.58316 7.44292 7.58386 7.59375 8.06055L7.44336 7.58398L7.21777 7.65527L7.12988 7.875C6.33953 9.85742 6.63918 11.417 6.86914 12.1357C5.88507 13.2956 5.29102 14.7503 5.29102 16.4932C5.29105 19.6352 6.26513 21.646 7.7832 22.9092C9.03261 23.9488 10.5974 24.4344 12.1328 24.6846C11.9055 25.0644 11.7245 25.5256 11.6182 26.0664C11.1911 26.2274 10.5943 26.3838 9.97363 26.3291C9.30215 26.2698 8.56637 25.9645 7.95898 25.0488L7.83887 24.8574C7.83625 24.8529 7.83323 24.8468 7.8291 24.8398C7.82026 24.8249 7.80774 24.8043 7.79199 24.7793C7.76059 24.7294 7.71533 24.6607 7.65625 24.5791C7.53828 24.4163 7.36245 24.1986 7.12988 23.9766C6.6677 23.5354 5.94999 23.049 4.99023 22.9824L4.97656 22.9814H4.93457C4.91963 22.9816 4.89872 22.9816 4.87402 22.9824C4.82515 22.9841 4.75735 22.9878 4.68066 22.9961C4.5466 23.0107 4.30976 23.0464 4.11133 23.1582C4.00711 23.2169 3.86544 23.3228 3.78516 23.5049C3.69768 23.7035 3.72025 23.9065 3.79102 24.0732C3.85636 24.2272 3.96553 24.3617 4.08594 24.4785C4.21001 24.5989 4.37016 24.7237 4.56641 24.8564L4.59961 24.8789L4.63574 24.8965L4.64844 24.9033C4.66687 24.9137 4.69871 24.9322 4.74121 24.9609C4.82679 25.0188 4.95626 25.1177 5.10938 25.2695C5.37615 25.534 5.71995 25.9658 6.02832 26.6387L6.1582 26.9424C6.1611 26.9503 6.16479 26.96 6.16895 26.9707C6.18009 26.9993 6.19567 27.0377 6.2168 27.084C6.25938 27.1773 6.32396 27.3043 6.41602 27.4502C6.60022 27.7421 6.8974 28.1147 7.35156 28.4512C8.19516 29.0761 9.51605 29.527 11.5176 29.2207C11.525 30.3105 11.5352 31.2491 11.5352 31.5693C11.5351 31.6716 11.4977 31.7498 11.4531 31.79C11.4233 31.8168 11.3267 31.8833 11.0645 31.8418C4.92096 29.8046 0.500059 24.0707 0.5 17.3193C0.5 8.86404 7.43532 2.00005 16 2ZM11.7725 27.3838C11.7557 27.3867 11.7391 27.3886 11.7227 27.3896C11.6812 27.3652 11.6066 27.3035 11.584 27.1826L11.7324 27.1543L11.7725 27.3838ZM11.8877 27.126C11.9094 27.2496 11.8582 27.3335 11.8281 27.3701C11.8117 27.3749 11.7949 27.3796 11.7773 27.3828L11.7461 27.2129L11.7354 27.1533L11.876 27.1279L11.8877 27.126ZM11.7314 27.1484L11.582 27.1768C11.5795 27.162 11.5817 27.1475 11.5811 27.1338C11.6292 27.1196 11.676 27.1047 11.7217 27.0898L11.7314 27.1484ZM11.8867 27.1201L11.7344 27.1484L11.7236 27.0889C11.7705 27.0736 11.8164 27.0595 11.8604 27.0439C11.8705 27.0665 11.8812 27.091 11.8867 27.1201ZM10.4141 27.1406H10.415L10.4141 27.1455H10.4131L10.4141 27.1406ZM7.10547 25.5703C7.08576 25.5732 7.06767 25.5748 7.05078 25.5742C7.02115 25.5509 6.99328 25.5224 6.96875 25.4893L7.02832 25.4463C7.05409 25.4883 7.07915 25.53 7.10547 25.5703Z" stroke="black"/>
                        </g>
                        <defs>
                        <clipPath id="clip0_10_1264">
                        <rect width="32" height="32" fill="white" transform="translate(0 0.5)"/>
                        </clipPath>
                        </defs>
                        </svg>
                    </a>
                  )}
                  {project.project_figma && (
                    <a
                      href={project.project_figma}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="rounded-full border lg:border-2 p-1 border-black "
                    >
                      <svg viewBox="0 0 48 48" fill="none" className="fill-black w-4 h-4 sm:w-6 sm:h-6 lg:w-12 lg:h-12" >
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M16.3201 0H31.6799C36.4495 0 40.32 3.8705 40.32 8.64006C40.32 11.9825 38.4192 14.8832 35.6403 16.3199C38.4192 17.7567 40.32 20.6576 40.32 23.9999C40.32 28.7695 36.4495 32.64 31.6799 32.64C28.9668 32.64 26.5446 31.3876 24.9602 29.4298V39.3599C24.9602 44.1295 21.0897 48 16.3201 48C11.5505 48 7.67999 44.1295 7.67999 39.3599C7.67999 36.0175 9.58077 33.1167 12.3597 31.6799C9.58077 30.2432 7.67999 27.3423 7.67999 23.9999C7.67999 20.6576 9.58075 17.7567 12.3597 16.3199C9.58076 14.8832 7.67999 11.9825 7.67999 8.64006C7.67999 3.8705 11.5505 0 16.3201 0ZM9.59999 8.64006C9.59999 4.9309 12.6109 1.92 16.3201 1.92H23.0398V15.3599H16.3201L16.2993 15.3599C12.5996 15.3487 9.59999 12.3422 9.59999 8.64006ZM23.0402 23.9086C23.0399 23.939 23.0398 23.9694 23.0398 23.9999C23.0398 24.0304 23.0399 24.0609 23.0402 24.0913V30.7198H16.3201C12.6109 30.72 9.59999 27.7091 9.59999 23.9999C9.59999 20.2977 12.5997 17.2911 16.2995 17.2799L16.3201 17.2799H23.0398L23.0402 23.9086ZM24.9602 24.0804V23.9195C25.0033 20.2565 27.9826 17.2947 31.6523 17.2799H31.6799C31.6868 17.2799 31.6936 17.2799 31.7005 17.2799C35.4003 17.2911 38.4 20.2977 38.4 23.9999C38.4 27.7091 35.3891 30.72 31.6799 30.72C27.9975 30.72 25.0034 27.7526 24.9602 24.0804ZM26.2505 17.2799C25.7765 17.6635 25.3438 18.0961 24.9602 18.5701V17.2799H26.2505ZM31.7007 15.3599C31.6938 15.3599 31.6868 15.3599 31.6799 15.3599C31.6694 15.3599 31.6589 15.3599 31.6484 15.3599H24.9602V1.92H31.6799C35.3891 1.92 38.4 4.9309 38.4 8.64006C38.4 12.3422 35.4004 15.3487 31.7007 15.3599ZM16.3201 32.6399C12.6109 32.6399 9.59999 35.6508 9.59999 39.3599C9.59999 43.0691 12.6109 46.08 16.3201 46.08C20.0293 46.08 23.0402 43.0691 23.0402 39.3599V32.6399H16.3201Z"/>
                    </svg>

                    </a>
                  )}
                    {project.project_link && (
                      <a
                      href={project.project_link}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="rounded-full"
                    >
                      <svg viewBox="0 0 48 48" fill="none" className="w-6 h-6 sm:w-8 sm:h-8 lg:w-12 lg:h-12">
                  <path d="M48 24C48 10.7663 37.2332 0 24 0C21.7727 0 19.6254 0.328149 17.5774 0.899056L17.5296 0.867314C17.5184 0.883408 17.5103 0.900844 17.4992 0.918727C7.41911 3.76298 0 13.0209 0 24C0 37.2337 10.7663 48 24 48C26.2286 48 28.3746 47.6719 30.4226 47.1009L30.4704 47.1345C30.4816 47.1184 30.4914 47.1009 30.5008 47.0831C40.5804 44.2366 48 34.9773 48 24ZM2.38869 25.1664H11.0381C11.1244 27.7442 11.4123 30.28 11.9341 32.7406H4.18725C3.15049 30.4016 2.5313 27.8479 2.38869 25.1664ZM45.6109 22.8349H36.9632C36.8751 20.2558 36.589 17.7196 36.0655 15.2589H43.8128C44.8495 17.5984 45.4687 20.1521 45.6109 22.8349ZM34.6335 22.8349H25.1646V15.2589H33.6862C34.2365 17.7151 34.5423 20.2513 34.6335 22.8349ZM25.1664 12.931V2.38869C26.2975 2.44949 27.408 2.57422 28.4881 2.80133C30.5008 5.92456 32.0513 9.3263 33.088 12.931H25.1664ZM22.8349 12.931H14.7341C15.6894 9.39024 17.1277 6.03007 19.0125 2.93098C20.2491 2.63815 21.5259 2.45888 22.8349 2.38869V12.931ZM22.8349 15.2594V22.8354H13.3405C13.3902 20.2576 13.6589 17.72 14.1676 15.2594H22.8349ZM11.0126 22.8349H2.38735C2.52996 20.1516 3.14915 17.5966 4.18591 15.2589H11.8066C11.3265 17.7281 11.0609 20.2607 11.0126 22.8349ZM13.3665 25.1664H22.8354V32.7406H14.312C13.763 30.2844 13.4577 27.7487 13.3665 25.1664ZM22.8349 35.0685V45.6109C21.7039 45.5501 20.5915 45.4253 19.5132 45.1982C17.5005 42.075 15.9501 38.6733 14.9115 35.0685C14.912 35.0685 22.8349 35.0685 22.8349 35.0685ZM25.1664 35.0685H33.2655C32.3088 38.6093 30.8719 41.9677 28.9871 45.0686C27.7505 45.3632 26.4736 45.5407 25.1646 45.6109V35.0685H25.1664ZM25.1664 32.7406V25.1664H34.6608C34.6112 27.7424 34.3425 30.28 33.8319 32.7406C33.8319 32.7406 25.1664 32.7406 25.1664 32.7406ZM36.9869 25.1664H45.6127C45.47 27.8497 44.8508 30.4034 43.8141 32.7406H36.1934C36.6735 30.2719 36.9391 27.7393 36.9869 25.1664ZM42.5967 12.931H35.4941C34.6255 9.73582 33.4014 6.67519 31.8125 3.80947C36.344 5.5678 40.1311 8.80458 42.5967 12.931ZM15.7453 3.97131C14.2655 6.79679 13.1309 9.80154 12.3355 12.9297H5.40328C7.79018 8.93735 11.4065 5.7663 15.7453 3.97131ZM5.40328 35.0685H12.5072C13.3745 38.2637 14.5986 41.3244 16.187 44.1901C11.656 42.4318 7.86886 39.195 5.40328 35.0685ZM32.2542 44.0287C33.734 41.2032 34.8687 38.1985 35.664 35.0703H42.5967C40.2094 39.0622 36.5935 42.2333 32.2542 44.0287Z" fill="#010002"/>
                  </svg>
                    </a>
                    )}
                </div>
              ))}
          </div>
              )
            }
          </Translation>
        </div>
        <div 
        className="flex flex-col items-center w-full xl:w-[80%] h-full xl:h-[90%] justify-center gap-6">
          <ImagesPart
            divImagesChildren={divImagesChildren}
            divImagesInner={divImagesInner}
            divImagesParents={divImagesParents}
            projectIsFixed={projectIsFixed}
            projects_realized={projects_realized}
          />
          <DescripcionPart
            projectIsFixed={projectIsFixed}
            projects_realized={projects_realized}
          />
        </div>
      </div>
    </section>
  );
};
